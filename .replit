run = "npm run deploy"
entrypoint = "src/App.tsx"
modules = ["nodejs-20:v8-20230920-bd784b9"]

hidden = [
  ".config",
  "tsconfig.json",
  "tsconfig.node.json",
  "vite.config.ts",
  ".gitignore",
]

[nix]
channel = "stable-24_05"

[env]
VITE_OPENAI_API_KEY = "$VITE_OPENAI_API_KEY"
PATH = "/home/runner/$REPL_SLUG/.config/npm/node_global/bin:/home/runner/$REPL_SLUG/node_modules/.bin"
npm_config_prefix = "/home/runner/$REPL_SLUG/.config/npm/node_global"

[packager]
language = "nodejs"

[packager.features]
packageSearch = true
guessImports = true
enabledForHosting = false

[languages]

[languages.javascript]
pattern = "**/{*.js,*.jsx,*.ts,*.tsx}"

[languages.javascript.languageServer]
start = "typescript-language-server --stdio"

[deployment]
run = ["sh", "-c", "npm run preview"]
deploymentTarget = "static"
publicDir = "dist"

[unitTest]
language = "nodejs"

[debugger]
support = true

[debugger.interactive]
transport = "localhost:0"
startCommand = ["dap-node"]

[debugger.interactive.initializeMessage]
command = "initialize"
type = "request"

[debugger.interactive.initializeMessage.arguments]
clientID = "replit"
clientName = "replit.com"
columnsStartAt1 = true
linesStartAt1 = true
locale = "en-us"
pathFormat = "path"
supportsInvalidatedEvent = true
supportsProgressReporting = true
supportsRunInTerminalRequest = true
supportsVariablePaging = true
supportsVariableType = true

[debugger.interactive.launchMessage]
command = "launch"
type = "request"

[debugger.interactive.launchMessage.arguments]
console = "externalTerminal"
cwd = "."
pauseForSourceMap = false
program = "./index.js"
request = "launch"
sourceMaps = true
stopOnEntry = false
type = "pwa-node"

[gitHubImport]
requiredFiles = [
  ".replit",
  "replit.nix",
  ".config",
  "package.json",
  "package-lock.json",
]

[[ports]]
localPort = 5173
externalPort = 80
exposeLocalhost = true
